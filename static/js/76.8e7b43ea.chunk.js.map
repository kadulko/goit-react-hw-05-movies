{"version":3,"file":"static/js/76.8e7b43ea.chunk.js","mappings":"6PACA,GAAgB,cAAc,2B,SCwC9B,MApCA,WACE,IACQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,WAAMC,GAAN,wFACCC,EAAAA,EAAAA,IAAWR,GADZ,OACdS,EADc,OAEpBL,GAAQ,OAAIK,IAFQ,2CAAH,sDAInBH,EAAcN,EACf,GAAE,CAACA,KAGF,8BACGG,IACC,wBACGA,EAAKO,KAAI,SAAAC,GAAK,OACb,gBAAmBC,UAAWC,EAAAA,OAA9B,UACGF,EAAMG,eACL,gBACEF,UAAWC,EAAAA,eACXE,IArBD,kCAqBeJ,EAAMG,aACpBE,IAAKL,EAAMM,QAGf,uBAAIN,EAAMM,QACV,uCAAeN,EAAMO,eATdP,EAAMJ,GADF,OAiBxB,C,+LCrCKY,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAU,sBAAuB,CACtDC,OAAQ,CACNC,QAASJ,KAJV,cAEGK,EAFH,yBAOIA,EAASC,KAAKC,SAPlB,gCASHC,QAAQC,MAAR,MATG,gFAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,gGAEoBT,EAAAA,EAAAA,IAAU,gBAAiB,CAChDC,OAAQ,CACNQ,MAAOA,EACPP,QAASJ,KALV,cAEGK,EAFH,yBAQIA,EAASC,KAAKC,SARlB,gCAUHC,QAAQC,MAAR,MAVG,gFAcA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BxB,GAA5B,gGAEoBc,EAAAA,EAAAA,IAAA,iBAAoBd,GAAM,CAC/Ce,OAAQ,CACNC,QAASJ,KAJV,cAEGK,EAFH,yBAOIA,EAASC,MAPb,gCASHE,QAAQC,MAAR,MATG,gFAaA,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,gGAEoBc,EAAAA,EAAAA,IAAA,iBAAoBd,EAApB,YAAkC,CACvDe,OAAQ,CACNC,QAASJ,KAJV,cAEGK,EAFH,yBAOIA,EAASC,KAAKtB,MAPlB,gCASHwB,QAAQC,MAAR,MATG,gFAaA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0BzB,GAA1B,gGAEoBc,EAAAA,EAAAA,IAAA,iBAAoBd,EAApB,YAAkC,CACvDe,OAAQ,CACNC,QAASJ,KAJV,cAEGK,EAFH,yBAOIA,EAASC,KAAKC,SAPlB,gCASHC,QAAQC,MAAR,MATG,gFAvDPP,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"actor-photo\":\"Cast_actor-photo__nQKec\"};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCredits } from 'services/api';\nimport styles from './Cast.module.css';\n\nfunction Cast() {\n  const imgURL = 'https://image.tmdb.org/t/p/w500';\n  const { movieId } = useParams();\n  const [cast, setCast] = useState();\n\n  useEffect(() => {\n    const fetchCredists = async id => {\n      const actors = await getCredits(movieId);\n      setCast([...actors]);\n    };\n    fetchCredists(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {cast && (\n        <ul>\n          {cast.map(actor => (\n            <li key={actor.id} className={styles.actors}>\n              {actor.profile_path && (\n                <img\n                  className={styles['actor-photo']}\n                  src={imgURL + actor.profile_path}\n                  alt={actor.name}\n                />\n              )}\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '8f1902936e413b4882515a6f0fcd6c97';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrending() {\n  try {\n    const response = await axios.get('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovies(query) {\n  try {\n    const response = await axios.get('/search/movie', {\n      params: {\n        query: query,\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const response = await axios.get(`/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getCredits(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","fetchCredists","id","getCredits","actors","map","actor","className","styles","profile_path","src","alt","name","character","API_KEY","getTrending","axios","params","api_key","response","data","results","console","error","getMovies","query","getMovieById","getReviews"],"sourceRoot":""}