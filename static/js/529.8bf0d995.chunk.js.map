{"version":3,"file":"static/js/529.8bf0d995.chunk.js","mappings":"2KA0BA,IAtBA,SAAmBA,GACjB,IAAQC,EAAWD,EAAXC,OACFC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMP,EAASQ,SAAWR,EAASS,QAF9C,SAIGN,EAAMO,SALFP,EAAME,GADA,KAYtB,C,uJCrBD,EAA6B,2B,SCwC7B,MAlCA,WACE,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAQF,EAAaG,IAAI,SAgB/B,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,qGACKC,EAAAA,EAAAA,IAAUJ,GADf,OACjBK,EADiB,OAEvBT,GAAU,OAAIS,IAFS,2CAAH,qDAIlBL,GAA0B,KAAjBA,EAAMM,QAAeH,GACnC,GAAE,CAACH,KAGF,iCACE,kBAAMO,UAAWC,EAAsBC,SAhBtB,SAAAC,GACnBA,EAAEC,iBACkC,KAAhCD,EAAEE,OAAOC,MAAMC,MAAMR,QACvBP,EAAgB,CAAEC,MAAOU,EAAEE,OAAOC,MAAMC,MAAMR,QACjD,EAYG,WACE,kBAAOS,KAAK,SAASC,KAAK,QAAQC,aAAcjB,KAChD,mBAAQe,KAAK,SAAb,wBAEF,SAACG,EAAA,EAAD,CAAWnC,OAAQA,MAGxB,C,+LCnCKoC,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAU,sBAAuB,CACtDC,OAAQ,CACNC,QAASJ,KAJV,cAEGK,EAFH,yBAOIA,EAASC,KAAKC,SAPlB,gCASHC,QAAQC,MAAR,MATG,gFAaA,SAAexB,EAAtB,+CAAO,OAAP,oBAAO,WAAyBJ,GAAzB,gGAEoBqB,EAAAA,EAAAA,IAAU,gBAAiB,CAChDC,OAAQ,CACNtB,MAAOA,EACPuB,QAASJ,KALV,cAEGK,EAFH,yBAQIA,EAASC,KAAKC,SARlB,gCAUHC,QAAQC,MAAR,MAVG,gFAcA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BxC,GAA5B,gGAEoBgC,EAAAA,EAAAA,IAAA,iBAAoBhC,GAAM,CAC/CiC,OAAQ,CACNC,QAASJ,KAJV,cAEGK,EAFH,yBAOIA,EAASC,MAPb,gCASHE,QAAQC,MAAR,MATG,gFAaA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA0BzC,GAA1B,gGAEoBgC,EAAAA,EAAAA,IAAA,iBAAoBhC,EAApB,YAAkC,CACvDiC,OAAQ,CACNC,QAASJ,KAJV,cAEGK,EAFH,yBAOIA,EAASC,KAAKM,MAPlB,gCASHJ,QAAQC,MAAR,MATG,gFAaA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0B3C,GAA1B,gGAEoBgC,EAAAA,EAAAA,IAAA,iBAAoBhC,EAApB,YAAkC,CACvDiC,OAAQ,CACNC,QAASJ,KAJV,cAEGK,EAFH,yBAOIA,EAASC,KAAKC,SAPlB,gCASHC,QAAQC,MAAR,MATG,gFAvDPP,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/Pages/Movies/Movies.module.css?72c0","components/Pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nfunction MovieList(props) {\n  const { movies } = props;\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link\n            to={`/movies/${movie.id}`}\n            state={{ from: location.pathname + location.search }}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nMovieList.propTypes = { movies: PropTypes.array };\n\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"input-form\":\"Movies_input-form__621Fq\"};","import MovieList from 'components/MovieList/MovieList';\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n// import PropTypes from 'prop-types'\nimport { getMovies } from 'services/api';\nimport styles from './Movies.module.css';\n\nfunction Movies() {\n  const [movies, setMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (e.target.input.value.trim() !== '')\n      setSearchParams({ query: e.target.input.value.trim() });\n  };\n\n  useEffect(() => {\n    const getMoviesByQuery = async () => {\n      const fetchedMovies = await getMovies(query);\n      setMovies([...fetchedMovies]);\n    };\n    if (query && query.trim() !== '') getMoviesByQuery();\n  }, [query]);\n\n  return (\n    <>\n      <form className={styles['input-form']} onSubmit={handleSubmit}>\n        <input type=\"search\" name=\"input\" defaultValue={query} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <MovieList movies={movies} />\n    </>\n  );\n}\n\n// Movies.propTypes = {};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '8f1902936e413b4882515a6f0fcd6c97';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrending() {\n  try {\n    const response = await axios.get('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovies(query) {\n  try {\n    const response = await axios.get('/search/movie', {\n      params: {\n        query: query,\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const response = await axios.get(`/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getCredits(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["props","movies","location","useLocation","map","movie","to","id","state","from","pathname","search","title","useState","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMoviesByQuery","getMovies","fetchedMovies","trim","className","styles","onSubmit","e","preventDefault","target","input","value","type","name","defaultValue","MovieList","API_KEY","getTrending","axios","params","api_key","response","data","results","console","error","getMovieById","getCredits","cast","getReviews"],"sourceRoot":""}